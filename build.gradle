plugins {
    id 'java'
}

group = 'ink.ziip.hammer'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "dmulloy2"
        url = "https://repo.dmulloy2.net/repository/public/"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
    maven {
        name = "opencollabRepositoryMavenSnapshots"
        url = "https://repo.opencollab.dev/maven-snapshots"
    }
    maven {
        url = uri("https://repo.opencollab.dev/maven-releases")
    }
    maven {
        name = "CodeMC"
        url = uri("https://repo.codemc.io/repository/maven-public/")
    }
    maven {
        name = "extendedclip placeholderapi"
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        name = 'alessiodp-repo'
        url = 'https://repo.alessiodp.com/releases/'
    }
}

dependencies {
    compileOnly(fileTree("libs"))

    compileOnly "org.spigotmc:spigot-api:1.19-R0.1-SNAPSHOT"

    // PlaceholderAPI
    compileOnly 'me.clip:placeholderapi:2.11.3'

    // ProtocolLib
    compileOnly 'com.comphenix.protocol:ProtocolLib:5.0.0'

    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    testCompileOnly 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
